$bgc: #000;
$perspective: 2000px;
$box-length: 200px;
$box-width: 100px;
$box-height: 300px;
$box-color: rgba(20,185,170,.4);
$shadow-base: rgba(255, 255, 0, .3);


*{
	margin: 0;
	padding: 0;
}
body{
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	background: radial-gradient(#351454, #2c1146 20% , #1f0c32) no-repeat 100% 100%;
	display: flex;
	justify-content: space-around;
}

//-------------------------------------box----------------------------------------------
@mixin render-basebox($type, $length, $width, $height, $color, $border: 0, $border-color: #000){
	.box{
		width: $length;
		height: $height;
		position: absolute;
		transform-style: preserve-3d;
		figure{
			margin: 0;
			display: block;
			position: absolute;
			background-color: $color;
			border: $border solid $border-color;
			@if($type == 'cube'){
				width: $length - $border*2;
				height: $height - $border*2;
				&.front{
					transform: rotateY(0deg) translateZ($length/2);
				}
				&.back{
					transform: rotateX(180deg) translateZ($length/2);
				}
				&.right{
					transform: rotateY(90deg) translateZ($length/2);
				}
				&.left{
					transform: rotateY(-90deg) translateZ($length/2);
				}
				&.top{
					transform: rotateX(90deg) translateZ($length/2);
				}
				&.bottom{
					transform: rotateX(-90deg) translateZ($length/2);
				}
			}
			@else{
				&.front, &.back{
					width: $length - $border*2;
					height: $height - $border*2;
				}
				&.right, &.left{
					width: $width - $border*2;
					height: $height - $border*2;
					left: ($length - $width)/2;
				}
				&.top, &.bottom{
					width: $length - $border*2;
					height: $width - $border*2;
					top: ($height - $width)/2;
				}
				&.front{
					transform: rotateY(0deg) translateZ($width/2);
				}
				&.back{
					transform: rotateX(180deg) translateZ($width/2);
				}
				&.right{
					transform: rotateY(90deg) translateZ($length/2);
				}
				&.left{
					transform: rotateY(-90deg) translateZ($length/2);
				}
				&.top{
					transform: rotateX(90deg) translateZ($height/2);
				}
				&.bottom{
					transform: rotateX(-90deg) translateZ($height/2);
				}
			}
		}
	}
}

//-------------------------------------leader----------------------------------------------
@mixin render-leader($num, $color1, $color2){
	@for $i from 1 through $num{
		&:nth-child(#{$i}){
			@if($i%2 != 0){
				background-color: $color1;
				top: 100%*round(($i+1)/2);
				transform: translateZ(50*round(($i+1)/2)+px);
			}
			@else{
				background-color: $color2;
				top: 100%*(round(($i+1)/2) - 1)+50%;
				transform: rotateX(90deg) translateY(100%*(round(($i+1)/2) - 1)+50%);
			}
		}
	}
}

.leader_container{
	position: relative;
	perspective: $perspective;
	margin-top: 50px;
	.leader{
		width: 50px;
		height: 50px;
		position: absolute;
		transform-style: preserve-3d;
		transform: rotateY(-40deg);
		figure{
			width: 100%;
			height: 100%;
			margin: 0;
			display: block;
			position: absolute;
			background-color: #fff;
			@include render-leader(12, #fff, #000);
		}
	}
}

//------------------------------------butterfly----------------------------------------------
$butterfly1-width: 18px;
$butterfly1-height: 30px;
$butterfly1-color1: #ff6e02;
$butterfly1-color2: #ffff00;

$butterfly2-width: 20px;
$butterfly2-height: 35px;
$butterfly2-color1: #ff6e02;
$butterfly2-color2: #ffff00;

.butterfly_container{
	position: relative;
	perspective: $perspective;
	.butterfly{
		position: absolute;
		transform-style: preserve-3d;
		transform: rotate3d(0, 1, 0, 0deg);
		.wing{
			width: 100%;
			height: 100%;
			border-radius: 100%;
			position: absolute;
			-webkit-clip-path: polygon(100% 30%, 60% 5%, 68% 0, 100% 40%, 30% 0%, 0% 80%, 100% 65%, 25% 90%, 100% 100%);
			&.left{
				left: 0;
				transform-origin: 100% 50%;
				transform: rotateX(90deg) rotateY(0deg);
				animation: butterflyWingleft .3s ease infinite;
			}
			&.right{
				right: 0;
				transform-origin: 100% 50%;
				transform: rotateX(90deg) rotateY(180deg);
				animation: butterflyWingright .3s ease infinite;
			}
		}
		&.butterfly1{
			width: $butterfly1-width;
			height: $butterfly1-height;
			animation: butterfly1 8s linear infinite;
			.wing{
				background: radial-gradient($butterfly1-color1, $butterfly1-color2 20% , $butterfly1-color1) no-repeat 100% 100%;
			}
		}
		&.butterfly2{
			width: $butterfly2-width;
			height: $butterfly2-height;
			animation: butterfly2 10s linear infinite;
			.wing{
				background: radial-gradient($butterfly2-color1, $butterfly2-color2 20% , $butterfly2-color1) no-repeat 100% 100%;
			}
		}
	}
}

@keyframes butterfly1{
	0%{
		transform: rotate3d(0, 1, 0, 0deg) translate3d(-200px, 450px, -100px);
	}
	100%{
		transform: rotate3d(0.3, 1, 0.2, -360deg) translate3d(-200px, 450px, -100px);
	}
}
@keyframes butterfly2{
	0%{
		transform: rotate3d(0, 1, 0, 0deg) translate3d(300px, 200px, -100px);
	}
	100%{
		transform: rotate3d(0.1, 1, 0.1, 360deg) translate3d(300px, 200px, -100px);
	}
}
@keyframes butterflyWingleft{
	0%{
		transform: rotateX(90deg) rotateY(0deg);
	}
	50%{
		transform: rotateX(90deg) rotateY(70deg);
	}
	100%{
		transform: rotateX(90deg) rotateY(0deg);
	}
}

@keyframes butterflyWingright{
	0%{
		transform: rotateX(90deg) rotateY(180deg);
	}
	50%{
		transform: rotateX(90deg) rotateY(110deg);
	}
	100%{
		transform: rotateX(90deg) rotateY(180deg);
	}
}

//------------------------------------carousel----------------------------------------------
@mixin carousel($num, $bgc, $translateZ, $rotateX:0, $clippath: none){
	@for $i from 0 through $num{
		&:nth-child(#{$i+1}){
			background-color: $bgc;
			transform: rotateY(360/$num*$i+deg) translateZ($translateZ) rotateX($rotateX);
			-webkit-clip-path: $clippath;
		}
	}
}

@mixin render-carousel($width, $height, $color, $num, $tz, $gap: 0, $border: 0, $border-color: #000, $rx:0, $cp: none){
	.carousel{
		width: $width;
		height: $height;
		position: absolute;
		transform-style: preserve-3d;
		figure{
			margin: 0;
			display: block;
			position: absolute;
			width: $width - $gap - $border*2;
			height: $height - $border*2;
			left: $gap/2;
			top: 0;
			border: $border solid $border-color;
			@include carousel($num, $color, $tz, $rx, $cp);
		}
	}
}

//----------------------------------------robot-----------------------

$robot-eyebox-length: 35px;
$robot-eyebox-width: 70px;
$robot-eyebox-height: 35px;
$robot-eyebox-color: #2cb6e1;
$robot-eyebox-border: 0;
$robot-eyebox-bordercolor: #333;

$robot-eyecarousel-width: 20px;
$robot-eyecarousel-height: 30px;
$robot-eyecarousel-color: #fded3b;
$robot-eyecarousel-gap: -1px;
$robot-eyecarousel-border: 1px;
$robot-eyecarousel-border-color: rgba(255,255,0,.4);
$robot-eyecarousel-num: 9;
$robot-eyecarousel-tz: round($robot-eyecarousel-width/2)/tan(180deg/$robot-eyecarousel-num);

$robot-neckcarousel-width: 5px;
$robot-neckcarousel-height: 60px;
$robot-neckcarousel-color: #30ad7c;
$robot-neckcarousel-gap: -1px;
$robot-neckcarousel-border: 0;
$robot-neckcarousel-border-color: #333;
$robot-neckcarousel-num: 5;
$robot-neckcarousel-tz: round($robot-neckcarousel-width/2)/tan(180deg/$robot-neckcarousel-num);

$robot-bodybox-length: 120px;
$robot-bodybox-width: 90px;
$robot-bodybox-height: 70px;
$robot-bodybox-color: #fc4040;
$robot-bodybox-border: 1px;
$robot-bodybox-bordercolor: rgba(0,0,0,.1);

$robot-footcarousel-width: 15px;
$robot-footcarousel-height: 40px;
$robot-footcarousel-color: #000;
$robot-footcarousel-gap: -2px;
$robot-footcarousel-border: 4px;
$robot-footcarousel-border-color: #222;
$robot-footcarousel-num: 12;
$robot-footcarousel-tz: round($robot-footcarousel-width/2)/tan(180deg/$robot-footcarousel-num);
$robot-footcover: $robot-footcarousel-tz*2;

$robot-handcarousel-width: 20px;
$robot-handcarousel-height: 30px;
$robot-handcarousel-color: #3c5cff;
$robot-handcarousel-gap: -1px;
$robot-handcarousel-border: 1px;
$robot-handcarousel-border-color: rgba(255,255,0,.4);
$robot-handcarousel-num: 12;
$robot-handcarousel-tz: round($robot-handcarousel-width/2)/tan(180deg/$robot-handcarousel-num);

$robot-tie-color: #fded3b;

.robot_container{
	position: absolute;
	// left: 650px;
	// top: 150px;
	left: 45%;
	top: 20%;
	perspective: $perspective;
	.robot{
		transform-style: preserve-3d;
		transform: rotate3d(0, 1, 0, 0deg);
		.eye_wrapper{
			position: relative;
			transform-style: preserve-3d;
			transform: rotate3d(1, 1, 0, 0deg);
			.eye{
				transform-style: preserve-3d;
				&.eyeleft{
					transform: rotate3d(0, 1, 0, 0deg);
				}
				&.eyeright{
					transform: rotate3d(0, 1, 0, 0deg) translateX($robot-eyecarousel-width*3);
				}
				&>section{
					position: absolute;
					&.box_container{
						transform-style: preserve-3d;
						margin-top: 50px;
						@include render-basebox('rectangular', $robot-eyebox-length, $robot-eyebox-width, $robot-eyebox-height, $robot-eyebox-color, $robot-eyebox-border, $robot-eyebox-bordercolor);
						.box{
							transform: rotateX(1deg);
							.front{
								border-radius: 100%;
								border: none;
								background: radial-gradient(38% 38%, closest-corner, #fff, #666 40%, #000) no-repeat 100% 100%;
								box-shadow: 2px 2px 10px #000;
								transform: rotateY(0deg) translateZ(40px);
								background-size: 100% 100%;
							}
						}
					}
					&.carousel_container{
						transform-style: preserve-3d;
						margin-top: 100px;
						@include render-carousel($robot-eyecarousel-width, $robot-eyecarousel-height, $robot-eyecarousel-color, $robot-eyecarousel-num, $robot-eyecarousel-tz, $robot-eyecarousel-gap, $robot-eyecarousel-border, $robot-eyecarousel-border-color);
						.carousel{
							transform: rotateX(90deg) translateY(12px);
							top: -47px;
							left: 8px;
						}
					}
				}				
			}
		}
		.neck{
			.carousel_container{
				transform-style: preserve-3d;
				@include render-carousel($robot-neckcarousel-width, $robot-neckcarousel-height, $robot-neckcarousel-color, $robot-neckcarousel-num, $robot-neckcarousel-tz, $robot-neckcarousel-gap, $robot-neckcarousel-border, $robot-neckcarousel-border-color);
				.carousel{
					transform: rotateX(0deg) translateZ(12px);
					top: 80px;
					left: 45px;
				}
			}
		}
		.body{
			.box_container{
				transform-style: preserve-3d;
				@include render-basebox('rectangular', $robot-bodybox-length, $robot-bodybox-width, $robot-bodybox-height, $robot-bodybox-color, $robot-bodybox-border, $robot-bodybox-bordercolor);
				.box{
					transform: rotateX(1deg);
					top: $robot-bodybox-length+$robot-neckcarousel-height/5;
					left: -$robot-bodybox-width/8;
					.front{
						&:after{
							content: "";
							display: block;
							width: 14px;
							height: 14px;
							position: absolute;
							left: 0;
							right: 0;
							margin: 0 auto;
							border-radius: 100%;
							background: -webkit-radial-gradient(#c045ff, #222);
						}
						&:before{
							content: "";
							display: block;
							width: 30%;
							height: 90%;
							position: absolute;
							left: 0;
							right: 0;
							margin: 0 auto;
							background: -webkit-repeating-linear-gradient(top left, #222, #222 5px, #c045ff 5px, #c045ff 10px);
							-webkit-clip-path: polygon(50% 0, 100% 90%, 0 50%, 50% 0);
							background-color: #333;
						}
					}
				}
			}
			.carousel_container{
				transform-style: preserve-3d;
				position: absolute;
				@include render-carousel($robot-handcarousel-width, $robot-handcarousel-height, $robot-handcarousel-color, $robot-handcarousel-num, $robot-handcarousel-tz, $robot-handcarousel-gap, $robot-handcarousel-border, $robot-handcarousel-border-color);
				&.handleft{
					top: 184px;
					left: 10px;
					transform: rotateX(90deg) rotateY(260deg) translateY(-4px);
				}
				&.handright{
					top: 170px;
					left: 85px;
					transform: rotateX(90deg) rotateY(35deg) translateY(-4px);
				}
			}
		}
		.foot{
			.carousel_container{
				transform-style: preserve-3d;
				position: relative;
				@include render-carousel($robot-footcarousel-width, $robot-footcarousel-height, $robot-footcarousel-color, $robot-footcarousel-num, $robot-footcarousel-tz, $robot-footcarousel-gap, $robot-footcarousel-border, $robot-footcarousel-border-color);
				.carousel{
					transform: rotateX(90deg) rotateZ(90deg);
					&.left{
						top: 200px;
						right: 15px;
					}
					&.right{
						top: 200px;
						left: 115px;
					}
					&:before{
						content: "";
						display: block;
						position: absolute;
						top: 0;
						left: ($robot-footcarousel-tz)*(-1)+$robot-footcarousel-width/2;
						width: $robot-footcover;
						height: $robot-footcover;
						background-color: $robot-footcarousel-border-color;
						border-radius: 100%;
						transform: rotateX(90deg) translateZ(0px);
						background: -webkit-repeating-linear-gradient($robot-footcarousel-border-color, $robot-footcarousel-border-color 10px, $robot-footcarousel-color 14px, $robot-footcarousel-color 14px);
					}
				}
			}
		}
	}	
}

// ------------------------------------------umbrella-------------------------------------------------------------
$umbrella-width: 34px;
$umbrella-height: 54px;
$umbrella-num: 16;
$umbrella-color: rgba(200, 35, 35, .6);
$umbrella-gap: 0;
$umbrella-border: 0;
$umbrella-border-color: transparent;
$umbrella-tz: 5px;
$umbrella-rotateX: 0deg;
$umbrella-clippath: polygon(20% 100%, 80% 100%, 58.3333% 0, 41.6666% 0);

$umbrella-hand-width: 2px;
$umbrella-hand-height: 90px;
$umbrella-hand-num: 6;
$umbrella-hand-color: rgba(50, 50, 50, 1);
$umbrella-hand-tz: round($umbrella-hand-width/2)/tan(180deg/$umbrella-hand-num);
$umbrella-hand-gap: -1px;
$umbrella-hand-border: 0;
$umbrella-hand-border-color: transparent;


@mixin umbrella-carousel($num, $bgc, $translateZ, $rotateX:0, $clippath: none){
	@for $i from 0 through $num{
		&:nth-child(#{$i+1}){
			background-color: $bgc;
			transform: rotateY(360/$num*$i+deg) translateZ($translateZ) rotateX($rotateX);
			-webkit-clip-path: $clippath;
			// @include umbrella-animate1(umbrella#{$i+1}, 360/$num*$i+deg, $translateZ, $umbrella_rotateX);
		}
	}
}

@mixin render-umbrella-carousel($width, $height, $color, $num, $tz, $gap: 0, $border: 0, $border-color: #000, $rx:0, $cp: none){
	.carousel{
		width: $width;
		height: $height;
		position: absolute;
		transform-style: preserve-3d;
		figure{
			margin: 0;
			display: block;
			position: absolute;
			width: $width - $gap - $border*2;
			height: $height - $border*2;
			left: $gap/2;
			top: 0;
			border: $border solid $border-color;
			transform-origin: center top;
			@include umbrella-carousel($num, $color, $tz, $rx, $cp);
		}
	}
}

.umbrella{
	position: absolute;
	// left: 450px;
	// top: 400px;
	left: 30%;
	top: 60%;
	transform-style: preserve-3d;
	transform: rotateX(60deg) rotateZ(-30deg) rotateY(0deg);
	.carousel_container.top{
		transform-style: preserve-3d;
		position: relative;
		@include render-umbrella-carousel($umbrella-width, $umbrella-height, $umbrella-color, $umbrella-num, $umbrella-tz, $umbrella-gap, $umbrella-border, $umbrella-border-color, $umbrella-rotateX, $umbrella-clippath);
	}
	.carousel_container.hand{
		transform-style: preserve-3d;
		position: relative;
		transform: translateX(15px) translateY(10px);
		@include render-carousel($umbrella-hand-width, $umbrella-hand-height, $umbrella-hand-color, $umbrella-hand-num, $umbrella-hand-tz, $umbrella-hand-gap, $umbrella-hand-border, $umbrella-hand-border-color);
	}
}



// ------------------------------------------flower-----------------------------------------------
$shadow-base: rgba(255, 255, 0, .2);

$flw-width: 50px;
$flw-height: 50px;
$flw-num: 8;
$flw-color: rgba(250, 135, 175, .1);
$flw-tz: -15px;
$flw-gap: 0;
$flw-border: 0;
$flw-border-color: transparent;
$flw-rotateX: -45deg;
$flw-clippath: polygon(0 0, 50% 50%, 90% 0, 0 0);
$flw-totalNum: 15;

@mixin flwfly($x, $y, $z, $deg, $no){
	@keyframes flw#{$no}{
		0%{
			transform: rotate3d($x, $y, $z, $deg+deg);
			
		}
		100%{
			transform: rotate3d($x, $y, $z, ($deg+360)+deg);
			
		}		
	}
}
@keyframes flwall{
	0%{
		top: -50px;
	}
	100%{
		top: 110%;
	}
}

.flw{
	position: absolute;
	top: -50px;
	transform-style: preserve-3d;
	
	.carousel{
		position: relative;
		figure{
			border-radius: 100%;
			transform-origin: center bottom;
			box-shadow: 0 0 8px 0 $shadow-base;
		}
	}
	@for $i from 1 through $flw-totalNum{
		&.flw#{$i}{
			left: percentage(random());
			animation: flwall ease-in (20+random(20))+s random(5)*0.1+1+s forwards infinite;
			transform: scale(random(3)*(-0.1)+1);
			@include render-carousel($flw-width, $flw-height, rgba(250, 135, 175, random(3)*0.1), $flw-num, $flw-tz, $flw-gap, $flw-border, $flw-border-color, $flw-rotateX, $flw-clippath);
			.carousel{
				$x: random(); $y: random(); $z: random(); $deg: random(360);
				transform: rotate3d($x, $y, $z, $deg+deg) translateZ((random(500)*(-1)-200)+px);
				animation: flw#{$i} linear (20+random(20))+s forwards infinite;
				@include flwfly($x, $y, $z, $deg, $i);
			}
		}
	}

}
// -------------------------------------------happy sad or mad-------------------------------------------------------------------
@mixin umbrella-animate1($name, $rotateY, $translateZ, $rotateX){
	@keyframes #{$name}{
		0%{
			transform: rotateY($rotateY) translateZ($translateZ) rotateX(0);
			// box-shadow: 0 0 1px 4px rgba(255, 185, 0, 0);
		}
		100%{
			transform: rotateY($rotateY) translateZ($translateZ) rotateX($rotateX);
			// box-shadow: 0 0 1px 4px rgba(255, 185, 0, 0.2);
		}
	}
	animation: $name ease 6s forwards 11s;
}

@keyframes happyUmbrella1{
	// left: 450px;
	// top: 400px;
	left: 30%;
	top: 60%;
	0%{
		transform: rotateX(60deg) rotateZ(-30deg) rotateY(0deg);
		left: 30%;
		top: 60%;
	}
	100%{
		transform: rotateX(15deg) rotateZ(6deg) rotateY(0deg);
		left: 30%;
		top: 50%;
	}
}
@keyframes happyUmbrella2{
	0%{
		transform: rotateX(15deg) rotateZ(6deg) rotateY(0deg);
	}
	100%{
		transform: rotateX(15deg) rotateZ(6deg) rotateY(360deg);
	}
}

@keyframes happyRobot1{
	0%{
		transform: translate(0px) rotate3d(0, 1, 0, -8deg);
	}
	100%{
		transform: translate(0px) rotate3d(0, 1, 0, -368deg);
	}
}
@keyframes happyRobotEye1{
	0%{
		transform: rotate3d(1, 1, 0, 0deg);
	}
	100%{
		transform: rotate3d(1, 1, 0, -15deg);
	}
}
@keyframes happyRobotEye2{
	0%{
		transform: rotate3d(1, 1, 0, -15deg);
	}
	100%{
		transform: rotate3d(1, 1, 0, 0deg);
	}
}
@keyframes happyRobotHand1{
	0%{
		transform: rotateX(90deg) rotateY(260deg) translateY(-4px);
	}
	100%{
		transform: rotateX(117deg) rotateY(260deg) translateY(-4px);
	}
}
@keyframes happyRobotHand2{
	0%{
		transform: rotateX(117deg) rotateY(260deg) translateY(-4px);
	}
	100%{
		transform: rotateX(90deg) rotateY(260deg) translateY(-4px);
	}
}
@keyframes sadButterfly{
	0%{
		transform: rotate3d(0, 1, 0, 0deg) translate3d(-200px, 450px, 0px);
	}
	100%{
		transform: rotate3d(0, 1, 0, -400deg) translate3d(-200px, 450px, 0px);
	}
}

@keyframes sadRobotEye1{
	0%{
		transform: rotate3d(1, 0, 0, 0deg);
	}
	100%{
		transform: rotate3d(1, 0, 0, -10deg);
	}
}
@keyframes sadRobotEye2{
	0%{
		background-size: 100% 100%;
	}
	100%{
		background-size: 100% 45%;
	}
}
@keyframes sadRobotUmbrella{
	0%{
		background-color: rgba(200, 35, 35, 0.6);
	}
	100%{
		background-color: rgba(55, 10, 10, 0.6);
	}
}
@keyframes madRobotEyeleft{
	0%{
		transform: rotate3d(0, 1, 0, 0deg);
	}
	100%{
		transform: rotate3d(0, 0, 1, -15deg) translateX(-80px) translateY(-80px) translateZ(-80px);
	}
}
@keyframes madRobotEyeRight{
	0%{
		transform: rotate3d(0, 1, 0, 0deg) translateX(60px);
	}
	100%{
		transform: rotate3d(0, 0, 1, 15deg) translateX(80px) translateY(-80px) translateZ(-80px);
	}
}
@keyframes madRobotNeck{
	0%{
		transform: translateZ(12px);
	}
	100%{
		transform: rotateX(0deg) translateZ(12px) translateY(-50px);
	}
}
@keyframes madRobotBox{
	0%{
		transform: rotateX(1deg);
	}
	100%{
		transform: rotateX(1deg) translateX(60px);
	}
}
@keyframes madRobotHandleft{
	0%{
		transform: rotateX(90deg) rotateY(260deg) translateY(-4px);
	}
	100%{
		transform: rotateX(90deg) rotateY(260deg) translateY(-4px) translateX(75px);
	}
}
@keyframes madRobotHandright{
	0%{
		transform: rotateX(90deg) rotateY(35deg) translateY(-4px);
	}
	100%{
		transform: rotateX(90deg) rotateY(35deg) translateY(-4px) translateX(85px);
	}
}
@keyframes madRobotFootleft{
	0%{
		transform: rotateX(90deg) rotateZ(90deg);
	}
	100%{
		transform: rotateX(90deg) rotateZ(110deg) translateX(50px);
	}
}
@keyframes madRobotFootright{
	0%{
		transform: rotateX(90deg) rotateZ(90deg);
	}
	100%{
		transform: rotateX(90deg) rotateZ(70deg) translateX(90px) translateZ(-20px);
	}
}
@keyframes madUmbrella{
	0%{
		transform: rotateX(60deg) rotateZ(-30deg) rotateY(0deg);
		left: 30%;
		top: 60%;
	}
	100%{
		transform: rotateX(15deg) rotateZ(-14deg) rotateY(0deg);
		// left: 250px;
		// top: 200px;
		left: 16%;
		top: 30%;
	}
}
@mixin umbrella-animate2($name, $rotateY, $translateZ, $rotateX){
	@keyframes #{$name}{
		0%{
			transform: rotateY($rotateY) translateZ($translateZ) rotateX(0);
		}
		100%{
			transform: rotateY($rotateY) translateZ($translateZ) rotateX($rotateX);
		}
	}
	animation: $name ease .3s forwards 5s;
}

body{
	&.mad{
		.robot{
			transition: 1s ease-in;
			transform: translate(0px) rotate3d(0, 1, 0, -18deg) !important;
			.eye.eyeleft{
				animation: madRobotEyeleft .3s ease-out 4s infinite alternate;
			}
			.eye.eyeright{
				animation: madRobotEyeRight .3s ease-out 4s infinite alternate;
			}
			.neck .carousel{
				animation: madRobotNeck .3s ease-out 4s infinite alternate;
			}
			.body .box{
				animation: madRobotBox .3s ease-out 4s infinite alternate;
			}
			.handleft{
				animation: madRobotHandleft .3s ease-out 4s infinite alternate;
			}
			.handright{
				animation: madRobotHandright .3s ease-out 4s infinite alternate;
			}
			.foot{
				.carousel.left{
					animation: madRobotFootleft .3s ease-out 4s infinite alternate;
				}
				.carousel.right{
					animation: madRobotFootright .3s ease-out 4s infinite alternate;
				}
			}
		}
		.umbrella{
			animation: madUmbrella 3s linear 1s forwards;
			.carousel_container.top{
				.carousel{
					figure{
						@for $i from 0 through $umbrella-num{
							&:nth-child(#{$i+1}){
								@include umbrella-animate2(madumbrella#{$i+1}, 360/$umbrella-num*$i+deg, $umbrella-tz, 120deg);
							}
						}
					}
				}
			}
		}
	}
	&.sad{
		filter: drop-shadow(5px 5px 5px #000) grayscale(.5);
		.robot{
			transition: 3s ease-in;
			transform: translate(0px) rotate3d(0, 1, 0, -8deg) !important;
			.eye_wrapper{
				animation: sadRobotEye1 linear 2s forwards;
				.eye .front{
					animation: sadRobotEye2 ease-out 2s 2s forwards;
				}				
			}
		}
		.umbrella{
			.carousel_container.top{
				.carousel{
					figure{
						@for $i from 0 through $umbrella-num{
							&:nth-child(#{$i+1}){
								animation: sadRobotUmbrella linear 2s 3s forwards;
							}
						}
					}
				}
			}
		}
		.butterfly{
			animation: sadButterfly 3s linear forwards;
		}
	}
	&.happy{
		.robot{
			transition: 3s ease-in;
			transform: translate(0px) rotate3d(0, 1, 0, -8deg) !important;
			animation: happyRobot1 linear 3s 17s 3 forwards;
			.handleft{
				animation: happyRobotHand1 linear 1s 6s forwards, happyRobotHand2 linear 1s 15s forwards;
			}
			.eye_wrapper{
				animation: happyRobotEye1 linear 1s 4s forwards, happyRobotEye2 linear 1s 15s forwards;
			}
		}
		.umbrella{
			animation: happyUmbrella1 linear 3s 8s forwards, happyUmbrella2 linear 3s 17s 3 forwards;
			.carousel_container.top{
				.carousel{
					figure{
						@for $i from 0 through $umbrella-num{
							&:nth-child(#{$i+1}){
								@include umbrella-animate1(umbrella#{$i+1}, 360/$umbrella-num*$i+deg, $umbrella-tz, 50deg);
							}
						}
					}
				}
			}
		}
	}
}